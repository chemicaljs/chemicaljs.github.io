---
import "../styles/global.css";
import Navbar from "@/components/Navbar.astro";
import Footer from "@/components/Footer.astro";
import {
	Breadcrumb,
	BreadcrumbItem,
	BreadcrumbLink,
	BreadcrumbList,
	BreadcrumbPage,
	BreadcrumbSeparator,
} from "@/components/ui/breadcrumb";

interface Props {
	frontmatter: {
		title: string;
	};
}

const { frontmatter } = Astro.props;

const pageData = await Astro.glob("/src/pages/docs/**/*.mdx");

const folders = [
	{
		title: "Introduction",
		dir: "introduction",
		pages: ["get-started", "faq"],
	},
  {
		title: "Server",
		dir: "server",
		pages: ["setup", "config"],
	},
  {
		title: "Client",
		dir: "client",
		pages: ["setup", "loaded", "encode", "decode", "transport", "wisp", "fetch", "suggestions"],
	},
  {
    title: "Vite",
    dir: "vite",
    pages: ["plugin"]
  },
  {
    title: "Building",
    dir: "building",
    pages: ["build"]
  },
  {
    title: "Components",
    dir: "components",
    pages: ["setup", "link", "input", "button", "iframe", "controls"]
  },
  {
    title: "Examples",
    dir: "examples",
    pages: ["basic", "fancy"]
  }
];

const docPages = folders.map((folder) => {
	const newPages = folder.pages.map((page) => {
		const data = pageData.filter(
			(p) => p.url == "/docs/" + folder.dir + "/" + page
		)[0];

		return {
			url: data.url,
			title: data.frontmatter.title,
			isActive: Astro.url.pathname == data.url,
		};
	});

	return {
		...folder,
		pages: newPages,
	};
});

const currentFolder = docPages.filter((folder) => {
	return folder.dir == Astro.url.pathname.split("/docs/")[1].split("/")[0];
})[0];
---

<!doctype html>
<html lang="en" class="dark">
	<head>
		<meta charset="UTF-8" />
		<meta
			name="description"
			content="Easily create your own web proxy with no experience required."
		/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>{frontmatter.title + " | Chemical"}</title>
	</head>
	<body class="min-h-[100vh] flex flex-col px-8">
		<Navbar />
		<main class="py-8 flex gap-8 px-8">
			<aside class="h-[calc(100vh_-_190px)] overflow-y-auto sticky self-start top-[105px] left-0 w-52 flex flex-col gap-2">
				{
					docPages.map((folder) => (
						<>
							<h4 class="font-bold">{folder.title}</h4>
							<div class="flex flex-col gap-2 px-2">
								{folder.pages.map((page) => (
									<a
										class={
											page.isActive
												? " text-foreground"
												: " text-muted-foreground"
										}
										href={page.url}
									>
										{page.title}
									</a>
								))}
							</div>
						</>
					))
				}
			</aside>
			<div class="w-full">
				<Breadcrumb className="mb-4">
					<BreadcrumbList>
						<BreadcrumbItem>
							<BreadcrumbLink href="/docs/introduction/get-started"
								>Docs</BreadcrumbLink
							>
						</BreadcrumbItem>
						<BreadcrumbSeparator />
						<BreadcrumbItem>
							<BreadcrumbLink href={currentFolder.pages[0].url}
								>{currentFolder.title}</BreadcrumbLink
							>
						</BreadcrumbItem>
						<BreadcrumbSeparator />
						<BreadcrumbItem>
							<BreadcrumbPage>{frontmatter.title}</BreadcrumbPage>
						</BreadcrumbItem>
					</BreadcrumbList>
				</Breadcrumb>
				<div class="prose dark:prose-invert">
					<slot />
				</div>
			</div>
		</main>
		<Footer />
	</body>
</html>

<style is:global>
	a:hover {
		text-decoration: underline;
	}
</style>
